name: Deploy Online Doc

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false
          
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT
          
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install
        
      - name: Build frontend
        run: pnpm build:frontend
        
      - name: Build backend
        run: pnpm build:backend
        
      - name: Debug - Check files
        run: |
          ls -la frontend/dist/
          ls -la backend/dist/
          
      - name: Create deployment package
        run: |
          tar -czf deploy.tar.gz frontend/dist backend/dist package.json pnpm-lock.yaml pnpm-workspace.yaml
          
      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H "$SERVER_HOST" >> ~/.ssh/known_hosts
          
      - name: Deploy to Server
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_DEPLOY_PATH: ${{ secrets.SERVER_DEPLOY_PATH }}
        run: |
          # 显示SSH密钥信息（不显示实际内容）
          echo "SSH key file exists: $(test -f ~/.ssh/id_ed25519 && echo 'Yes' || echo 'No')"
          echo "SSH key file permissions: $(ls -la ~/.ssh/id_ed25519)"
          
          # 上传部署包
          scp deploy.tar.gz $SERVER_USERNAME@$SERVER_HOST:/tmp/
          
          # 解压并部署
          ssh $SERVER_USERNAME@$SERVER_HOST "mkdir -p $SERVER_DEPLOY_PATH && \
            tar -xzf /tmp/deploy.tar.gz -C $SERVER_DEPLOY_PATH && \
            rm /tmp/deploy.tar.gz && \
            cd $SERVER_DEPLOY_PATH && \
            pnpm install --prod && \
            pm2 reload ecosystem.config.js"