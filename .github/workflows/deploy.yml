name: Deploy Online Doc

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false
          
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT
          
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install
        
      - name: Build frontend
        run: pnpm build:frontend
        
      - name: Build backend
        run: pnpm build:backend
        
      - name: Create deployment archive
        run: |
          tar -czf deploy.tar.gz frontend/dist backend/dist package.json pnpm-lock.yaml pnpm-workspace.yaml
          
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: deploy-package
          path: deploy.tar.gz
          retention-days: 1
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: deploy-package
          
      - name: Debug info
        run: |
          ls -la
          echo "Current directory: $(pwd)"
      
      - name: Deploy to server
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr
          path: deploy.tar.gz
          remote_path: ${{ secrets.SERVER_DEPLOY_PATH }}/
          remote_host: ${{ secrets.SERVER_HOST }}
          remote_user: ${{ secrets.SERVER_USERNAME }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Execute deployment commands
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.SERVER_DEPLOY_PATH }}
            tar -xzf deploy.tar.gz
            rm deploy.tar.gz
            pnpm install --prod
            pm2 reload ecosystem.config.js